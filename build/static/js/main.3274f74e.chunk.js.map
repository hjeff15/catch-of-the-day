{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","current","value","props","history","push","className","onSubmit","this","type","ref","required","placeholder","defaultValue","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","transitionOptions","classNames","timeout","enter","exit","component","name","price","onClick","removeFromOrder","orderIds","Object","keys","total","reduce","prevTotal","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","console","log","updatedFish","updateFish","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","authData","a","fetch","storeId","context","store","post","data","user","setState","provider","authProvider","auth","signInWithPopup","then","logout","signOut","onAuthStateChanged","loadSampleFishes","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","details","src","alt","disabled","App","Date","now","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","setItem","stringify","removeBinding","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","document","querySelector"],"mappings":"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","file":"static/js/main.3274f74e.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","\nimport React from 'react';\nimport PropTypes from \"prop-types\";\nimport { getFunName } from \"../helpers\";\n\nclass StorePicker extends React.Component{\n\n    myInput = React.createRef();\n\n    static propTypes = {\n        history: PropTypes.object\n    };\n\n    goToStore = (event) => {\n        //Stop form from submitting\n        event.preventDefault();\n        // 2. get the text from input\n        const storeName = this.myInput.current.value;\n\n        // 3. change the page to /store/whaterver-they-entered\n        this.props.history.push(`/store/${storeName}`)\n\n    }\n\n    render(){\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Please Enter A Store</h2>\n                <input \n                    type=\"text\" \n                    ref={this.myInput}\n                    required \n                    placeholder=\"Store Name\" \n                    defaultValue={ getFunName() }\n                />\n                <button type=\"submit\">Visit Store</button>\n            </form>\n        )\n    }\n}\n\nexport default StorePicker;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n// Stateless Functional Component - Can be better for performance if it is just passed in data from 'props' and returns some JSX\nconst Header = props => (\n    <header className=\"top\">\n        <h1>Catch\n            <span className='ofThe'>\n                <span className='of'>Of</span>\n                <span className='the'>The</span>\n            </span>\n            Day\n        </h1>\n        <h3 className=\"tagline\">\n            <span>\n            {props.tagline}\n            </span>\n        </h3>\n    </header>\n);\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n}\n\nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {formatPrice} from \"../helpers\";\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\n\n\nclass Order extends React.Component {\n\n    static propTypes = {\n        fishes: PropTypes.object,\n        order: PropTypes.object,\n        removeFromOrder: PropTypes.func\n    }\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === \"available\";\n        const transitionOptions = {\n            classNames:\"order\", \n            key,\n            timeout: { enter: 500, exit: 500 }\n        }\n        //Make sure fish is loaded before we continue\n        if(!fish) return null;\n        \n        if(!isAvailable) {\n            return(\n                <CSSTransition {...transitionOptions} >\n                    <li key={key}>Sorry {fish ? fish.name : 'fish'} is no longer available</li>\n                </CSSTransition>\n            )\n        }\n        return (\n            <CSSTransition {...transitionOptions} >\n                <li key={key}>\n                    <span>\n                        <TransitionGroup component=\"span\" className=\"count\">\n                            <CSSTransition classNames=\"count\" key={count} timeout={{ enter:500, exit: 500}}>\n                                <span> {count} </span> \n                            </CSSTransition> \n                        </TransitionGroup>\n                        lbs {fish.name}\n                        {formatPrice(count * fish.price)}\n                        <button onClick={() => this.props.removeFromOrder(key)}>&times;</button>\n                    </span>\n                </li>\n            </CSSTransition>\n           \n        );\n    }\n    \n    render(){\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === \"available\";\n            if(isAvailable){\n                return prevTotal + (count * fish.price);\n            }\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className='order-wrap'>\n                <h2>Order</h2>\n                <TransitionGroup component=\"ul\" className=\"order\">\n                    {orderIds.map(this.renderOrder)}\n                </TransitionGroup>\n                <div className=\"total\">\n                Total:\n                    <strong>{formatPrice(total)}</strong>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default Order;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass AddFishForm\n extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    }\n\n    createFish = (event) => {\n        event.preventDefault();\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value,\n        }\n        this.props.addFish(fish);\n        //refresh the form\n        event.currentTarget.reset();\n    }\n\n    render(){\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}> \n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                <select name=\"status\" ref={this.statusRef}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Desc\"/>\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add Fish</button>\n            </form>\n        )\n    }\n}\n\nexport default AddFishForm\n;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass EditFishForm extends React.Component {\n    static propTypes = {\n        fish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        index: PropTypes.string, \n        updateFish: PropTypes.func\n    }\n\n    handleChange = (event) => {\n        console.log(event.currentTarget.value);\n        //update that fish\n        // 1. take a copy of that fish\n        const updatedFish = {\n            ...this.props.fish,\n            [event.currentTarget.name]: event.currentTarget.value\n        };\n        this.props.updateFish(this.props.index, updatedFish)\n    }\n    \n    render(){\n        return (\n            <div className=\"fish-edit\">\n                <input \n                    type=\"text\" \n                    name=\"name\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.name} />\n                <input \n                    type=\"text\" \n                    name=\"price\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.price} />\n                <select \n                    type=\"text\" \n                    name=\"status\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.status}>\n                    <option value=\"available\">Fresh!</option>\n                    <option value=\"unavailable\">Sold Out!</option>\n                </select>\n                <textarea \n                    type=\"text\" \n                    name=\"desc\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.desc} />\n                <input \n                    type=\"text\" \n                    name=\"image\" \n                    onChange={this.handleChange} \n                    value={this.props.fish.image} />\n                <button onClick={() => this.props.deleteFish(this.props.index)}>\n                    Remove Fish\n                </button>\n            </div>\n        )\n    }\n}\n\nexport default EditFishForm;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Login = (props) => (\n    <nav className=\"login\">\n        <h2>Inventory Login</h2>\n        <p>Sign in to manage your store's Inventory.</p>\n        <button \n            className=\"github\" \n            onClick={() => props.authenticate('Github')}>\n            Sign in with Github\n        </button>\n        <button \n            className=\"twitter\" \n            onClick={() => props.authenticate('Twitter')}>\n            Sign in with Twitter\n        </button>\n    </nav> \n);\n\nLogin.propTypes = {\n    authenticate: PropTypes.func.isRequired\n};\n\nexport default Login;","import Rebase from \"re-base\";\nimport firebase from \"firebase\";\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyAhoY9o6miMJoNY4OCH55GaNMnn2tKjzT4\",\n    authDomain: \"catch-of-the-day-hugo.firebaseapp.com\",\n    databaseURL: \"https://catch-of-the-day-hugo.firebaseio.com\"\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n//This is a named export\nexport {firebaseApp};\n\n//This is a default export\nexport default base;\n\n\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport AddFishForm from \"./AddFishForm\";\nimport EditFishForm from \"./EditFishForm\";\nimport Login from \"./Login\";\nimport firebase from \"firebase\";\nimport base, { firebaseApp } from \"../base\";\n\n\nclass Inventory extends React.Component {\n    static propTypes = {\n        fishes: PropTypes.object, \n        updateFish: PropTypes.func,\n        deleteFish: PropTypes.func,\n        loadSampleFishes: PropTypes.func\n    }\n\n    state = {\n        uid: null,\n        owner: null\n    };\n\n    componentDidMount(){\n        firebase.auth().onAuthStateChanged(user => {\n            if(user) {\n                this.authHandler({ user });\n            }\n        })\n    }\n\n    authHandler = async (authData) => {\n        // 1. Look up the current store in the firebase database\n        const store = await base.fetch(this.props.storeId, {context: this});\n        console.log(store);\n        // 2. Claim it if there is no owner\n        if (!store.owner){\n            //save as our own\n            await base.post(`${this.props.storeId}/owner`, {\n                data: authData.user.uid\n            });\n        }\n        // 3. Set the state of the inventory component to reflect the current user\n        this.setState({\n            uid: authData.user.uid,\n            owner: store.owner || authData.user.uid\n        });\n\n        console.log(authData);\n    }\n    authenticate = provider => {\n        const authProvider = new firebase.auth[`${provider}AuthProvider`]();\n        firebaseApp\n        .auth()\n        .signInWithPopup(authProvider)\n        .then(this.authHandler);\n    }\n\n    logout = async () => {\n        console.log(\"Logging Out!!\");\n        await firebase.auth().signOut();\n        this.setState({ uid:null })\n    }\n\n    render(){\n\n        const logout = <button onClick={this.logout}>Log out</button>\n\n        // Check if they are logged in\n        if(!this.state.uid){\n            return <Login authenticate={this.authenticate} />;\n        }\n        // check if they are the owner of the store\n        if (this.state.uid !== this.state.owner){\n            return (\n                <div>\n                    <p>Sorry You are not the owner!</p>\n                    {logout}\n                </div>\n            )\n        }\n        // They must be the owner, just render the inventory\n        return (\n            <div className=\"inventory\">\n                <h2>Inventory</h2>\n                {logout}\n                {Object.keys(this.props.fishes).map(key => \n                    <EditFishForm \n                        key={key} \n                        index={key}\n                        fish={this.props.fishes[key]} \n                        updateFish={this.props.updateFish} \n                        deleteFish={this.props.deleteFish} \n                    />\n                )}\n                <AddFishForm addFish={this.props.addFish}/>\n                <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n            </div>\n        )\n    }\n}\n\nexport default Inventory;","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {formatPrice} from \"../helpers\";\n\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    }\n\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    }\n\n    render(){\n        const {image, name, price, desc, status} = this.props.details;\n        const isAvailable = status === \"available\";\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name}/>\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button disabled={!isAvailable} onClick={this.handleClick}>\n                    {isAvailable ? \"Add to Order\" : \"Sold Out!\"}\n                </button>\n            </li>\n        )\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from \"prop-types\";\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from '../sample-fishes';\nimport Fish from \"./Fish\";\nimport base from \"../base\";\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        match: PropTypes.object\n    }\n\n    componentDidMount(){\n        const {params} = this.props.match;\n        //first reinstate our local Storage\n        const localStorageRef = localStorage.getItem(params.storeId);\n        if(localStorageRef){\n            console.log(\"Restoring it\");\n            console.log(JSON.parse(localStorageRef))\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: \"fishes\"\n        });\n    }\n\n    componentDidUpdate(){\n        localStorage.setItem(this.props.match.params.storeId, \n        JSON.stringify(this.state.order));\n    }\n\n    componentWillUnmount(){\n        base.removeBinding(this.ref);\n    }\n\n    addFish = fish => {\n        const fishes = {...this.state.fishes};\n        // Add new fish to state.fishes(copy)\n        fishes[`fish${Date.now()}`] = fish;\n        // Set new fishes obj to state\n        this.setState({fishes});\n    }\n\n    updateFish = (key, updatedFish) => {\n        const fishes = {...this.state.fishes };\n        fishes[key] = updatedFish;\n        this.setState({ fishes });\n    }\n\n    deleteFish = (key) => {\n        // 1. take a copy of state\n        const fishes = { ...this.state.fishes };\n        // 2. update the state\n        fishes[key] = null;\n        // 3.  update state\n        this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({fishes: sampleFishes});\n    }\n\n    addToOrder = (key) => {\n        // take a copy of state\n        const order = {...this.state.order};\n        //Either add to the order or update the number\n        order[key] = order[key] + 1 || 1;\n        // call setState to update our state object\n        this.setState({ order })\n    }\n\n    removeFromOrder = (key) => {\n        const order = {...this.state.order};\n        delete order[key];\n        this.setState({ order });\n    }\n\n    render(){\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh Seafood Market\"/>\n                    <ul className=\"fishes\">\n                        {Object.keys(this.state.fishes).map(key =>( \n                            <Fish \n                                key={key} \n                                index={key}\n                                details={this.state.fishes[key]}\n                                addToOrder={this.addToOrder}\n                            />\n                        ))}\n                    </ul>\n                </div>\n                <Order \n                    fishes={this.state.fishes} \n                    order={this.state.order}\n                    removeFromOrder={this.removeFromOrder}\n                />\n                <Inventory \n                    addFish={this.addFish} \n                    updateFish={this.updateFish}\n                    deleteFish={this.deleteFish}\n                    loadSampleFishes={this.loadSampleFishes}\n                    fishes={this.state.fishes}\n                    storeId={this.props.match.params.storeId}\n                />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from \"react\";\n// ***Stateless fuctional component\nconst NotFound = () => (\n    <div>\n        <h2>Not Found!?!</h2>\n    </div>\n)\n\nexport default NotFound;","import React from \"react\";\n\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport StorePicker from \"./StorePicker\";\nimport App from \"./App\";\nimport NotFound from \"./NotFound\";\n\nconst Router = () => (\n    <BrowserRouter>\n        <Switch>\n            <Route exact path=\"/\" component={StorePicker}/>\n            <Route path=\"/store/:storeId\" component={App}/>\n            <Route component={NotFound}/>\n        </Switch>\n    </BrowserRouter>\n);\n\nexport default Router;","\nimport React from 'react';\nimport {render} from 'react-dom';\nimport Router from \"./components/Router\";\nimport \"./css/style.css\";\n\nrender(<Router/>, document.querySelector(\"#main\"));"],"sourceRoot":""}